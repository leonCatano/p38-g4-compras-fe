<template>
  <div>
    <h1>
      Â¡Welcome <span> {{ username }} </span>!
    </h1>
    <br>
        <h3>
            This is the information about: your credit cards and your transactions
        </h3>
    <br>
  </div>
  <div>
    <h1 align="center">CREDIT CARDS </h1>
    <div>
      <table class="table">
        <tr>
          <th>ID</th>
          <th>Name</th>
          <th>Number</th>
          <th>Franchise</th>
          <th>Bank's Name</th>
        </tr>
        <tr v-for="creditCardByUserId in creditCardByUserId" :key="creditCardByUserId.id" >
          <td>
            {{ creditCardByUserId.id }}
          </td>
          <td>
            {{ creditCardByUserId.card_name }}
          </td>
          <td>
            {{ creditCardByUserId.card_number }}
          </td>
          <td>
            {{ creditCardByUserId.card_franchise }}
          </td>
          <td>
            {{ creditCardByUserId.bank_name }}
          </td>
          <td>
            <button v-on:click="deleteCredirCard(creditCardByUserId.id)" style="cursor: pointer; font-size: 10px; padding: 5px 8px;  border-radius: 50%;  background: #ff0018a8"><strong>X</strong></button>
          </td>
        </tr>
      </table>
    </div>
  </div>
  <div class="tablat">
  <br>
    <h1 align="center">TRANSACTIONS</h1>
    <br>
    <div>
      <table class="table">
        <tr>
          <th>ID</th>
          <th>Date</th>
          <th>Status</th>
          <th>Product</th>
          <th>Value</th>
          <th>Credit card</th>
          <th>Action</th>
        </tr>
        <tr v-for="transactionByIdUser in transactionByIdUser" :key="transactionByIdUser.id">
          <td>
            {{ transactionByIdUser.id }}
          </td>
          <td>
            {{ transactionByIdUser.transaction_date }}
          </td>
          <td>
            <span v-if="transactionByIdUser.transaction_status == 'A'">Aprobada</span>
            <span v-if="transactionByIdUser.transaction_status == 'D'">Denegada</span>
            <span v-if="transactionByIdUser.transaction_status == 'R'">Reversado</span>
            <span v-if="transactionByIdUser.transaction_status == 'E'">En proceso</span>
          </td>
          <td>
            {{ transactionByIdUser.store_name }}
          </td>
          <td>
            {{ transactionByIdUser.transaction_value }}
          </td>
          <td>
            {{ transactionByIdUser.credit_card.card_name }}
          </td>
          <td>
            <button v-on:click="deleteTransaction(transactionByIdUser.id)" style="cursor: pointer; font-size: 10px; padding: 5px 8px;  border-radius: 50%;  background: #ff0018a8"><strong>X</strong></button>
          </td>
        </tr>
      </table>
    </div>
  </div>
</template>

<script>
import gql from "graphql-tag";
import jwt_decode from "jwt-decode";

export default {
  name: "Profile",
  data: function () {
    return {
      userId: jwt_decode(localStorage.getItem("token_refresh")).user_id,
      creditcardByUserId: [],
      transactionByIdUser: [],
    }
  },
  apollo: {
    transactionByIdUser: {
      query: gql`
      query ($userId: Int!) {
        transactionByIdUser(userId: $userId) {
          id
          transaction_date
          transaction_status
          transaction_value
          store_name
          credit_card {
            id
            card_name
            card_number
            card_franchise
            bank_name
            id_user
          }
        }
      }
    `,
    variables() {
      return {
        userId: this.userId,
      };
    },
  },
  creditCardByUserId: {
    query: gql`
      query ($userId: Int!) {
        creditCardByUserId(userId: $userId) {
          id
          card_name
          card_number
          card_franchise
          bank_name
          id_user
        }
      }
    `,
    variables() {
      return {
        userId: this.userId,
      };
    },
  },
},
  created: function () {
    this.$apollo.queries.transactionByIdUser.refetch();
    this.$apollo.queries.creditCardByUserId.refetch();
  },
  methods: {
    deleteTransaction(transactionId){
      alert("");
      this.$apollo.mutate({
             mutation: gql`
             mutation DeleteTransaction($userId: Int!, $transactionId: Int!) {
              deleteTransaction(userId: $userId, transactionId: $transactionId)
            }`,
             variables:{
             userId: this.userId,
             transactionId: transactionId
             }
           })
         location.reload();
       },
       deleteCreditCard(creditCardId){
         alert("");
         this.$apollo.mutate({
                mutation: gql`
                mutation DeleteCreditCard($userId: Int!, $creditCardId: Int!) {
                  deleteCreditCard(userId: $userId, creditCardId: $creditCardId)
                }`,
                variables:{
                  userId: this.userId,
                  creditCardId: creditCardId
                }
              })
            location.reload();
          },
        },
      
};
</script>

<style>
.information {
  margin: 0;
  padding: 0%;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.information h1 {
  font-size: 60px;
  color: #0f1316;
}
.information h2 {
  font-size: 40px;
  color: #283747;
}
.information span {
  color: crimson;
  font-weight: bold;
}

.table{
  align:"center";
  height:100% ;
  width: 100%;
  margin-bottom: 1rem;
  color: #212529;

}

.button  {
  font-size:10px;
  padding: 10px 25px;
  border-radius: 50%;

  color: #e5e7e9;
  background: #173f6a;

}
.tablat{
  padding-bottom: 150px;
}

</style>
